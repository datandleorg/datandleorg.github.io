{"version":3,"sources":["components/CommonStyles/styles.js","components/Header/index.js","assets/img/gmail.svg","assets/img/linkedin.svg","assets/img/smartphone.svg","assets/img/home.svg","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["css","HomeContainer","styled","div","Heading","p","props","size","HeaderImg","LightText","pointer","HoverEffect","SocialIcons","MenuLinks","GrayImg","img","w","h","menulist","text","to","type","icon","home","className","socialLinks","smartphone","link","linkedin","gmail","Header","map","m","src","width","height","s","data-text","value","onClick","e","event","stopPropagation","input","document","createElement","setSelectionRange","execCommand","console","log","target","window","open","handleSocialIcon","module","exports","Footer","Works","React","lazy","Home","App","fallback","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.16688df1.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nexport const FullHeight = css`\r\n  height: 100vh;\r\n`;\r\nexport const FullWidth = css`\r\n  width: 100vw;\r\n`;\r\n\r\nexport const HomeContainer = styled.div`\r\n  background: #ffffff;\r\n`;\r\n\r\nexport const Heading = styled.p`\r\n  font-weight: 600;\r\n  font-size: ${(props) => props.size}rem;\r\n  color: #282828;\r\n  line-height: ${(props) => props.size}rem;\r\n  @media (max-width: 768px) {\r\n    font-size: ${(props) => props.size}rem;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const HeaderImg = styled.div`\r\n  img {\r\n    width: 12rem;\r\n  }\r\n`;\r\n\r\nexport const LightText = styled.p`\r\n  font-weight: 200;\r\n  color: #666;\r\n  @media (max-width: 768px) {\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const GrayText = styled.p`\r\n  color: #ccc;\r\n`;\r\n\r\nexport const pointer = css`\r\n  cursor: pointer;\r\n`;\r\nexport const HoverEffect = css`\r\n  transition: all ease-in 0.2s;\r\n  &:hover {\r\n    background: #ededed;\r\n  }\r\n`;\r\n\r\nexport const SocialIcons = styled.div`\r\n  ${pointer}\r\n  ${HoverEffect}  padding: 2rem;\r\n\r\n  > img {\r\n    width: 15px;\r\n    height: 15px;\r\n  }\r\n`;\r\n\r\nexport const MenuLinks = styled.div`\r\n  ${pointer}\r\n  ${HoverEffect}  \r\n  padding: 2rem;\r\n\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n    &.mview {\r\n      display: block;\r\n      padding: 1rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GrayImg = styled.img`\r\n  filter: grayscale(0100%);\r\n  transition: filter ease-in 0.2s;\r\n  width: ${(props) => props.w}px;\r\n  height: ${(props) => props.h}px;\r\n  ${pointer}\r\n  &:hover {\r\n    filter: grayscale(0%);\r\n  }\r\n  @media (max-width: 768px) {\r\n    width: ${(props) => (props.w / 100) * 5}rem;\r\n    height: ${(props) => (props.h / 100) * 5}rem;\r\n    padding: 0rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SocialIcons, MenuLinks } from \"../CommonStyles/styles\";\r\nimport gmail from \"../../assets/img/gmail.svg\";\r\nimport linkedin from \"../../assets/img/linkedin.svg\";\r\nimport smartphone from \"../../assets/img/smartphone.svg\";\r\nimport home from \"../../assets/img/home.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst menulist = [\r\n  {\r\n    text: \"\",\r\n    to: \"/\",\r\n    type: \"route\",\r\n    icon: home,\r\n    className: \"mview\",\r\n  },\r\n  {\r\n    text: \"My Works\",\r\n    to: \"/works\",\r\n    type: \"route\",\r\n    icon: null,\r\n    className: \"mview\",\r\n  },\r\n  {\r\n    text: \"Digits\",\r\n    to: \"/digits\",\r\n    type: \"route\",\r\n    icon: null,\r\n    className: \"mview\",\r\n  },\r\n];\r\n\r\nconst socialLinks = [\r\n  {\r\n    text: \"Phone\",\r\n    to: \"\",\r\n    type: \"link\",\r\n    icon: smartphone,\r\n    link: \"tel:+919791129332\",\r\n  },\r\n  {\r\n    text: \"LinkedIn\",\r\n    to: \"\",\r\n    type: \"link\",\r\n    icon: linkedin,\r\n    link: \"https://www.linkedin.com/in/saravanan-ayyappan-27440016a/\",\r\n  },\r\n\r\n  {\r\n    text: \"Gmail\",\r\n    to: \"\",\r\n    type: \"link\",\r\n    icon: gmail,\r\n    link: \"mailto:asaravanan248@gmail.com\",\r\n  },\r\n];\r\n\r\nconst handleSocialIcon = (event, s) => {\r\n  if (s.type === \"clipboard\") {\r\n    event.stopPropagation();\r\n    let input = document.createElement(\"input\");\r\n    input.value = s.value;\r\n    input.setSelectionRange(0, 99999);\r\n    document.execCommand(\"copy\");\r\n    console.log(event.target, document.execCommand(\"copy\"));\r\n  }\r\n\r\n  if (s.type === \"link\") {\r\n    window.open(s.link);\r\n  }\r\n};\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-between align-items-center f1 bg-light\">\r\n        <div className=\"d-flex\">\r\n          {menulist.map((m) => {\r\n            return (\r\n              <Link to={m.to}>\r\n                <MenuLinks className={m.className ? m.className : \"\"}>\r\n                  <span className=\"menuTxt\">\r\n                    {m.text}\r\n                    {m.icon && <img src={m.icon} width={20} height={20} />}\r\n                  </span>\r\n                </MenuLinks>{\" \"}\r\n              </Link>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"d-flex\">\r\n          {socialLinks.map((s) => {\r\n            return (\r\n              <SocialIcons data-text={s.value} onClick={(e) => handleSocialIcon(e, s)}>\r\n                {s.icon && <img src={s.icon} data-text={s.value} className=\"menuImg\" />}\r\n              </SocialIcons>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","module.exports = __webpack_public_path__ + \"static/media/gmail.deda33ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.8d317898.svg\";","module.exports = __webpack_public_path__ + \"static/media/smartphone.953e368f.svg\";","module.exports = __webpack_public_path__ + \"static/media/home.24d267df.svg\";","import React from \"react\";\r\nimport { LightText } from \"../CommonStyles/styles\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"d-flex f1 bg-light justify-content-center p-2\">\r\n      <div className=\"p-2\">\r\n        <LightText>\r\n          <small>Powered By : datandleorg</small>\r\n        </LightText>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { lazy, Suspense } from \"react\";\nimport \"./App.scss\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Header from \"./components/Header\";\n//import Home from \"./components/Home\";\n// import Works from \"./components/Works\";\nimport Footer from \"./components/Footer\";\n//import Resume from \"./components/Resume\";\nconst Works = React.lazy(() => import(\"./components/Works\"));\nconst Home = React.lazy(() => import(\"./components/Home\"));\nconst DigitRecogonizer = React.lazy(() => import(\"./components/DigitRecogonizer\"));\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Suspense fallback={<div className=\"text-center p-5\">Loading...</div>}>\n          <Header></Header>\n        </Suspense>\n\n        <div>\n          <Suspense fallback={<div className=\"text-center p-5\">Loading...</div>}>\n            <Switch>\n              <Route path=\"/works\" exact component={Works} />\n              <Route path=\"/\" exact component={Home} />\n              {/* <Route path=\"/digits\" exact component={DigitRecogonizer} /> */}\n            </Switch>\n          </Suspense>\n        </div>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}